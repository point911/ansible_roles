---
- name: Create Zookeeper directories
  become: yes
  become_user: "{{ zookeeper.user }}"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/home/{{ zookeeper.user }}/bin"
    - "{{ zookeeper.conf_dir }}"
    - "{{ zookeeper.data_dir }}"
    - "{{ zookeeper.log_dir }}"

- name: Download ZooKeeper
  become: yes
  become_user: "{{ zookeeper.user }}"
  get_url:
    url: "http://www.mirrorservice.org/sites/ftp.apache.org/zookeeper/zookeeper-{{ zookeeper.version }}/zookeeper-{{ zookeeper.version }}.tar.gz"
    dest: "/home/{{ zookeeper.user }}/zookeeper-{{ zookeeper.version }}.tar.gz"

- name: Unpack Zookeeper
  become: yes
  become_user: "{{ zookeeper.user }}"
  unarchive:
    copy: no
    creates: "/home/{{ zookeeper.user }}/zookeeper-{{ zookeeper.version }}"
    dest: "/home/{{ zookeeper.user }}"
    src: "/home/{{ zookeeper.user }}/zookeeper-{{ zookeeper.version }}.tar.gz"

- name: Link to Zookeeper Directory
  become: yes
  become_user: "{{ zookeeper.user }}"
  file:
    dest: "{{ zookeeper.install_dir }}"
    src: "/home/{{ zookeeper.user }}/zookeeper-{{ zookeeper.version }}"
    state: link


- name: Create Zookeeper service for Upstart
  become: yes
  template:
    dest: /etc/init/zookeeper.conf
    mode: 644
    owner: root
    src: zookeeper.service.j2
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'


- name: Create Zookeeper service for SystemD
  become: yes
  template:
    src: zookeeper_systemd.service.j2
    dest: /etc/systemd/system/zookeeper.service
    owner: root
    mode: 0644
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'


- name: Ensure Zookeeper runs on boot
  become: yes
  service:
    enabled: yes
    name: zookeeper
