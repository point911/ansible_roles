- name: Install some dependencies
  apt: name={{ item }} state=installed
  with_items:
    - unzip
    - python-pip

- name: Install python dependencies
  pip: name={{ item }} state=present
  with_items:
    - boto
    - boto3
    - awscli

- name: Ensure install folders
  become: yes
  become_user: "{{ kafka_manager.user }}"
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "/home/{{ kafka_manager.user }}/etc"


- name: Fetch kafka manager sources
  become: yes
  become_user: "{{ kafka_manager.user }}"
  get_url:
    url=https://github.com/yahoo/kafka-manager/archive/{{ kafka_manager.sources_tag }}.zip
    dest=/tmp/kafka-manager.zip
    mode=0644
    force=no
  when: kafka_manager.installation_type is not defined

- name: Fetch kafka manager zip file from repo
  become: yes
  become_user: "{{ kafka_manager.user }}"
  get_url:
    url: "{{ kafka_manager.zip_path }}"
    dest: /tmp/kafka-manager.zip
    mode: 0644

- name: unpack the Kafka Manager ZIP
  become: yes
  become_user: "{{ kafka_manager.user }}"
  unarchive:
    copy=no
    src=/tmp/kafka-manager.zip
    dest=/home/{{ kafka_manager.user }}/

- stat: path=/home/{{ kafka_manager.user }}/kafka-manager
  become: yes
  become_user: "{{ kafka_manager.user }}"
  register: kafka_manager_link

- shell: unlink /home/{{ kafka_manager.user }}/kafka-manager
  become: yes
  become_user: "{{ kafka_manager.user }}"
  when: kafka_manager_link.stat.exists

- name: Link kafka manager to the right version
  become: yes
  become_user: "{{ kafka_manager.user }}"
  shell: ln -s /home/{{ kafka_manager.user }}/kafka-manager-{{ kafka_manager.sources_tag }} /home/{{ kafka_manager.user }}/kafka-manager
